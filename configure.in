dnl ---------------------------------------------
dnl Automake/autoconf input file for Conglomerate
dnl ---------------------------------------------

AC_PREREQ(2.52)

AC_INIT(conglomerate, 0.7.0)
AC_CONFIG_SRCDIR(src/main.c)
AM_INIT_AUTOMAKE(AC_PACKAGE_NAME, AC_PACKAGE_VERSION)

AM_CONFIG_HEADER(config.h)

AM_SANITY_CHECK
AM_MAINTAINER_MODE
AC_CANONICAL_HOST

AC_C_CONST
AC_ISC_POSIX
AC_PROG_CC
AC_PROG_CPP
AC_PROG_INSTALL
AM_DISABLE_STATIC
AM_PROG_LIBTOOL
AC_PROG_INTLTOOL

GETTEXT_PACKAGE=$PACKAGE_NAME
AC_SUBST(GETTEXT_PACKAGE)
AC_DEFINE_UNQUOTED(GETTEXT_PACKAGE, "$GETTEXT_PACKAGE", [Package name for gettext])

ALL_LINGUAS="es da nl ru"

AM_GLIB_GNU_GETTEXT

dnl --- Package configuration ---

LIBXML_REQUIRED=2.0.0
LIBXSLT_REQUIRED=1.0.0
LIBBONOBO_REQUIRED=2.0.0
LIBBONOBOUI_REQUIRED=2.0.0
LIBGNOMEUI_REQUIRED=2.0.0
LIBGNOMEPRINT_REQUIRED=1.116.0
LIBGNOMEPRINTUI_REQUIRED=1.116.0
LIBGLADE2_REQUIRED=2.0.0
LIBFO_REQUIRED=0.2.3

PKG_CHECK_MODULES(CONGLOMERATE,		\
  libxml-2.0 >= $LIBXML_REQUIRED	\
  libxslt >= $LIBXSLT_REQUIRED		\
  libbonobo-2.0 >= $LIBBONOBO_REQUIRED	\
  libbonoboui-2.0 >= $LIBBONOBOUI_REQUIRED	\
  libgnomeui-2.0 > $LIBGNOMEUI_REQUIRED	\
  libglade-2.0 >= $LIBGLADE2_REQUIRED)

AC_SUBST(CONGLOMERATE_LIBS)
AC_SUBST(CONGLOMERATE_CFLAGS)


AC_MSG_CHECKING([whether to build with printing support])
AC_ARG_ENABLE(printing, [  --enable-printing      build with printing support [default=no]], enable_printing="$enableval", enable_printing=no)
                                                                                               
if test x$enable_printing = xauto || test x$enable_printing = xyes ; then
   PKG_CHECK_MODULES(PRINTING, \
		    libgnomeprint-2.2 >= $LIBGNOMEPRINT_REQUIRED \
		    libgnomeprintui-2.2 >= $LIBGNOMEPRINTUI_REQUIRED \
		    libfo-0.2 >= $LIBFO_REQUIRED, \
		    have_printing=yes, have_printing=no)
   if test x"$have_printing" = "xyes"; then
         enable_printing=yes
	 PRINTING_CFLAGS="$PRINTING_CFLAGS -DENABLE_PRINTING"
   else
         enable_printing=no 
	 PRINTING_CFLAGS=
	 PRINTING_LIBS=
   fi
else
   enable_printing=no         
   PRINTING_CFLAGS=
   PRINTING_LIBS=
fi

AM_CONDITIONAL(ENABLE_PRINTING, test x$enable_printing = xyes)
AC_SUBST(PRINTING_CFLAGS)
AC_SUBST(PRINTING_LIBS)
AC_MSG_RESULT($enable_printing)

dnl --- General compilation options ---

AC_MSG_CHECKING([whether to support debugging])
AC_ARG_ENABLE(debug,
[  --enable-debug          enable debugging of application],
    debug=$enableval, debug=no)
AC_MSG_RESULT($debug)

AC_MSG_CHECKING([whether to support profiling])
AC_ARG_ENABLE(profile,
[  --enable-profile        enable profiling of application],
    profile=$enableval, profile=no)
AC_MSG_RESULT($profile)

AC_MSG_CHECKING([whether to optimize])
AC_ARG_ENABLE(optimization,
[  --enable-optimization        enable optimization of application],
    optimize=$enableval, optimize=no)
AC_MSG_RESULT($optimize)

if test "$debug" = yes; then
  BASE_CFLAGS="$BASE_CFLAGS -g"
fi

if test "$profile" = yes; then
  BASE_CFLAGS="$BASE_CFLAGS -pg"
fi

if test "$optimize" = yes; then
  BASE_CFLAGS="$BASE_CFLAGS -O3 -fomit-frame-pointer"

  case "${target}" in
    i486*) BASE_CFLAGS="$BASE_CFLAGS -march=i486 -mcpu=i486"
           ;;
    i586*) BASE_CFLAGS="$BASE_CFLAGS -march=i586 -mcpu=i586"
           ;;
    i686*) BASE_CFLAGS="$BASE_CFLAGS -march=i686 -mcpu=i686"
           ;;
  esac
fi

dnl --- Set compiler flags ---

BASE_CFLAGS="$BASE_CFLAGS -Wall"

dnl --- Output ---

AC_OUTPUT(Makefile 
          po/Makefile.in
	  data/Makefile
	  doc/Makefile
	  doc/devel/Makefile
	  doc/C/Makefile
	  glade/Makefile
	  pixmaps/Makefile
	  examples/Makefile 
          src/Makefile)
